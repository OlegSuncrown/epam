[{"K:\\student\\Competition\\epam\\src\\index.js":"1","K:\\student\\Competition\\epam\\src\\reportWebVitals.js":"2","K:\\student\\Competition\\epam\\src\\App.js":"3","K:\\student\\Competition\\epam\\src\\context\\goals\\GoalContext.js":"4","K:\\student\\Competition\\epam\\src\\context\\seasonalGoals\\SeasonalGoalContext.js":"5","K:\\student\\Competition\\epam\\src\\context\\auth\\AuthContext.js":"6","K:\\student\\Competition\\epam\\src\\Dashboard.js":"7","K:\\student\\Competition\\epam\\src\\utils\\setAuthToken.js":"8","K:\\student\\Competition\\epam\\src\\layouts\\index.js":"9","K:\\student\\Competition\\epam\\src\\pages\\index.js":"10","K:\\student\\Competition\\epam\\src\\pages\\goals\\SingleGoal.js":"11","K:\\student\\Competition\\epam\\src\\components\\index.js":"12","K:\\student\\Competition\\epam\\src\\layouts\\header\\Header.js":"13","K:\\student\\Competition\\epam\\src\\layouts\\footer\\Footer.js":"14","K:\\student\\Competition\\epam\\src\\pages\\register\\RegisterPage.js":"15","K:\\student\\Competition\\epam\\src\\pages\\landing\\LandingPage.js":"16","K:\\student\\Competition\\epam\\src\\pages\\login\\LoginPage.js":"17","K:\\student\\Competition\\epam\\src\\pages\\userGoals\\UserGoalsPage.js":"18","K:\\student\\Competition\\epam\\src\\pages\\seasonalGoals\\SeasonalGoalsPage.js":"19","K:\\student\\Competition\\epam\\src\\context\\default\\DefaultGoalsContext.js":"20","K:\\student\\Competition\\epam\\src\\pages\\goals\\Goal.js":"21","K:\\student\\Competition\\epam\\src\\pages\\bages\\BagesPage.js":"22","K:\\student\\Competition\\epam\\src\\pages\\profile\\ProfilePage.js":"23","K:\\student\\Competition\\epam\\src\\pages\\userGoals\\GoalItem.js":"24","K:\\student\\Competition\\epam\\src\\components\\pagination\\Pagination.js":"25","K:\\student\\Competition\\epam\\src\\pages\\landing\\Main.js":"26","K:\\student\\Competition\\epam\\src\\pages\\landing\\Hero.js":"27","K:\\student\\Competition\\epam\\src\\components\\sidebar\\SideNav.js":"28","K:\\student\\Competition\\epam\\src\\components\\sidebar\\UserAvatar.js":"29","K:\\student\\Competition\\epam\\src\\pages\\goals\\GoalProgress.js":"30","K:\\student\\Competition\\epam\\src\\pages\\profile\\UserProfileCard.js":"31","K:\\student\\Competition\\epam\\src\\layouts\\header\\DropdownMenu.js":"32","K:\\student\\Competition\\epam\\src\\pages\\bages\\Bage.js":"33","K:\\student\\Competition\\epam\\src\\pages\\landing\\AdsCard.js":"34","K:\\student\\Competition\\epam\\src\\components\\sidebar\\FileUploader.js":"35","K:\\student\\Competition\\epam\\src\\utils\\configureData.js":"36","K:\\student\\Competition\\epam\\src\\components\\sidebar\\SideBar.js":"37","K:\\student\\Competition\\epam\\src\\context\\users\\UsersContext.js":"38"},{"size":1091,"mtime":1608630436419,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1608131243822,"results":"41","hashOfConfig":"40"},{"size":1865,"mtime":1608539976177,"results":"42","hashOfConfig":"40"},{"size":5882,"mtime":1608635096823,"results":"43","hashOfConfig":"40"},{"size":4501,"mtime":1608635096777,"results":"44","hashOfConfig":"40"},{"size":3233,"mtime":1608539976201,"results":"45","hashOfConfig":"40"},{"size":1290,"mtime":1608635096754,"results":"46","hashOfConfig":"40"},{"size":295,"mtime":1608282170145,"results":"47","hashOfConfig":"40"},{"size":106,"mtime":1608284712648,"results":"48","hashOfConfig":"40"},{"size":576,"mtime":1608539976213,"results":"49","hashOfConfig":"40"},{"size":6909,"mtime":1608635096795,"results":"50","hashOfConfig":"40"},{"size":180,"mtime":1608539976194,"results":"51","hashOfConfig":"40"},{"size":1933,"mtime":1608635096784,"results":"52","hashOfConfig":"40"},{"size":1298,"mtime":1608620961387,"results":"53","hashOfConfig":"40"},{"size":4091,"mtime":1608539976218,"results":"54","hashOfConfig":"40"},{"size":240,"mtime":1608539976215,"results":"55","hashOfConfig":"40"},{"size":3355,"mtime":1608539976217,"results":"56","hashOfConfig":"40"},{"size":3191,"mtime":1608635325816,"results":"57","hashOfConfig":"40"},{"size":3041,"mtime":1608635096801,"results":"58","hashOfConfig":"40"},{"size":977,"mtime":1608635096767,"results":"59","hashOfConfig":"40"},{"size":1758,"mtime":1608635096790,"results":"60","hashOfConfig":"40"},{"size":2441,"mtime":1608635096786,"results":"61","hashOfConfig":"40"},{"size":3076,"mtime":1608635096797,"results":"62","hashOfConfig":"40"},{"size":2781,"mtime":1608635096820,"results":"63","hashOfConfig":"40"},{"size":3414,"mtime":1608620961381,"results":"64","hashOfConfig":"40"},{"size":1671,"mtime":1608539976216,"results":"65","hashOfConfig":"40"},{"size":1399,"mtime":1608579953598,"results":"66","hashOfConfig":"40"},{"size":1450,"mtime":1608561725727,"results":"67","hashOfConfig":"40"},{"size":1500,"mtime":1608561725728,"results":"68","hashOfConfig":"40"},{"size":4386,"mtime":1608635096792,"results":"69","hashOfConfig":"40"},{"size":4037,"mtime":1608635096799,"results":"70","hashOfConfig":"40"},{"size":1217,"mtime":1608539976208,"results":"71","hashOfConfig":"40"},{"size":1640,"mtime":1608579953594,"results":"72","hashOfConfig":"40"},{"size":1140,"mtime":1608539976214,"results":"73","hashOfConfig":"40"},{"size":1759,"mtime":1608635096759,"results":"74","hashOfConfig":"40"},{"size":605,"mtime":1608553504454,"results":"75","hashOfConfig":"40"},{"size":583,"mtime":1608635096763,"results":"76","hashOfConfig":"40"},{"size":1708,"mtime":1608635096778,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1me6z5r",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"K:\\student\\Competition\\epam\\src\\index.js",[],"K:\\student\\Competition\\epam\\src\\reportWebVitals.js",[],["165","166"],"K:\\student\\Competition\\epam\\src\\App.js",[],"K:\\student\\Competition\\epam\\src\\context\\goals\\GoalContext.js",["167","168"],"import React, { useState, createContext, useEffect, useContext } from \"react\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nexport const GoalContext = createContext();\r\n\r\nconst GoalState = (props) => {\r\n  const location = useLocation();\r\n  const { logOut, isAuthenticated } = useContext(AuthContext);\r\n  const URL = \"https://hwtaweb20201216131958.azurewebsites.net\";\r\n\r\n  const [goalsList, setGoalsList] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [goalsError, setGoalsError] = useState(\"\");\r\n  const [sortedGoals, setSortedGoals] = useState([]);\r\n  // Count difference between 2 dates\r\n  const date_diff_indays = (date1, date2) => {\r\n    let dt1 = new Date(date1);\r\n    let dt2 = new Date(date2);\r\n    return Math.floor(\r\n      (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\r\n        Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\r\n        (1000 * 60 * 60 * 24)\r\n    );\r\n  };\r\n\r\n  // Mark goal as completed during loading all goals\r\n  const completeGoalduringLoading = async (id) => {\r\n    const data = {\r\n      goalId: id,\r\n      isCompleted: true,\r\n    };\r\n\r\n    try {\r\n      await axios.post(`${URL}/completeUserGoal`, data);\r\n      setIsLoaded(true);\r\n    } catch (err) {\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  ///getAllUserGoals\r\n  const loadGoals = async () => {\r\n    if (localStorage.AuthToken) {\r\n      setAuthToken(localStorage.AuthToken);\r\n    }\r\n    try {\r\n      const { data } = await axios.get(`${URL}/getAllUserGoals`);\r\n      const formatData = data.map((item) => {\r\n        const allDays = date_diff_indays(item.startDate, item.plannedEndDate);\r\n        let currentDay =\r\n          date_diff_indays(Date.now(), item.plannedEndDate) > allDays\r\n            ? 0\r\n            : allDays - date_diff_indays(Date.now(), item.plannedEndDate);\r\n        let progress = Math.round((currentDay * 100) / allDays);\r\n        let fullyCompleted = false;\r\n        // Check if goal need to be completed\r\n        if (!item.isCompleted && currentDay >= allDays) {\r\n          completeGoalduringLoading(item.goalId);\r\n        }\r\n\r\n        if (currentDay > allDays) {\r\n          currentDay = allDays;\r\n        }\r\n\r\n        if (progress > 100) {\r\n          progress = 100;\r\n        }\r\n\r\n        if (\r\n          item.finishedDate &&\r\n          date_diff_indays(item.finishedDate, item.plannedEndDate) <= 0\r\n        ) {\r\n          fullyCompleted = true;\r\n        }\r\n\r\n        return {\r\n          ...item,\r\n          allDays,\r\n          currentDay: currentDay > 0 ? currentDay : 0,\r\n          progress,\r\n          fullyCompleted,\r\n        };\r\n      });\r\n\r\n      setGoalsError(\"\");\r\n      setIsLoaded(true);\r\n      setSortedGoals(formatData);\r\n      setGoalsList(formatData);\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        location.search = \"\";\r\n        setGoalsError(\"\");\r\n        logOut();\r\n      }\r\n      setGoalsError(\"Error, could not fetch list of goals\");\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  // Mark goal as completed\r\n  const completeGoal = async (id) => {\r\n    const data = {\r\n      goalId: id,\r\n      isCompleted: true,\r\n    };\r\n\r\n    try {\r\n      await axios.post(`${URL}/completeUserGoal`, data);\r\n      loadGoals();\r\n      setIsLoaded(true);\r\n      swal.fire(\"Success\", \"Goal was completed!\", \"success\");\r\n    } catch (err) {\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  // Delete Goals\r\n  const deleteGoals = async (goalId) => {\r\n    setIsLoaded(false);\r\n    try {\r\n      await axios.delete(`${URL}/DeleteUserGoal`, {\r\n        data: { goalId: goalId },\r\n      });\r\n\r\n      loadGoals();\r\n      setIsLoaded(true);\r\n      swal.fire(\"Success\", \"Goal was deleted!\", \"success\");\r\n    } catch (err) {\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated || localStorage.AuthToken) {\r\n      loadGoals();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Filter user goals\r\n  const filterGoals = (filter = \"all\") => {\r\n    let goals = [...goalsList];\r\n\r\n    if (filter === \"all\") {\r\n      goals = goals;\r\n    }\r\n\r\n    if (filter === \"byCompleted\") {\r\n      goals = goals.filter((item) => item.isCompleted);\r\n    }\r\n\r\n    if (filter === \"byFullyCompleted\") {\r\n      goals = goals.filter((item) => item.fullyCompleted);\r\n    }\r\n\r\n    if (filter === \"byActive\") {\r\n      goals = goals.filter((item) => !item.isCompleted);\r\n    }\r\n\r\n    setSortedGoals(goals);\r\n  };\r\n\r\n  // Delete with Alert\r\n  const deleteWithAlert = (id) => {\r\n    swal\r\n      .fire({\r\n        title: \"Are you sure?\",\r\n        text: \"Once deleted, you will not be able to recover this!\",\r\n        showCancelButton: true,\r\n        confirmButtonText: `Confirm`,\r\n        denyButtonText: `Cancel`,\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          deleteGoals(+id);\r\n        }\r\n      });\r\n  };\r\n\r\n  const completeGoalWithAlert = (id) => {\r\n    swal\r\n      .fire({\r\n        title: \"Goal is not fully completed?\",\r\n        text: \"Are you sure, you want to give up now?\",\r\n        showCancelButton: true,\r\n        confirmButtonText: `Confirm`,\r\n        denyButtonText: `Cancel`,\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          completeGoal(+id);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <GoalContext.Provider\r\n      value={{\r\n        goalsList,\r\n        isLoaded,\r\n        goalsError,\r\n        loadGoals,\r\n        deleteGoals,\r\n        filterGoals,\r\n        sortedGoals,\r\n        deleteWithAlert,\r\n        completeGoalWithAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GoalContext.Provider>\r\n  );\r\n};\r\nexport default GoalState;\r\n","K:\\student\\Competition\\epam\\src\\context\\seasonalGoals\\SeasonalGoalContext.js",["169","170","171"],"import React, { useState, createContext, useEffect, useContext } from \"react\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport swal from \"sweetalert2\";\r\nexport const SeasonalGoalContext = createContext();\r\n\r\nconst SeasonalGoalState = (props) => {\r\n  const location = useLocation();\r\n  const { logOut, isAuthenticated } = useContext(AuthContext);\r\n  const URL = \"https://hwtaweb20201216131958.azurewebsites.net\";\r\n\r\n  const [goalsList, setGoalsList] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [goalsError, setGoalsError] = useState(\"\");\r\n  const [sortedGoals, setSortedGoals] = useState([]);\r\n  // Count difference between 2 dates\r\n  const date_diff_indays = (date1, date2) => {\r\n    let dt1 = new Date(date1);\r\n    let dt2 = new Date(date2);\r\n    return Math.floor(\r\n      (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\r\n        Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\r\n        (1000 * 60 * 60 * 24)\r\n    );\r\n  };\r\n\r\n  // Mark goal as completed\r\n  const completeGoal = async (id) => {\r\n    const data = {\r\n      goalId: id,\r\n      isCompleted: true,\r\n    };\r\n\r\n    try {\r\n      await axios.post(`${URL}/completeUserGoal`, data);\r\n      // swal.fire(\"Success\", \"Goal was completed!\", \"success\");\r\n      // loadGoals();\r\n      setIsLoaded(true);\r\n    } catch (err) {\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  ///getAllUserGoals\r\n  const loadGoals = async () => {\r\n    if (localStorage.AuthToken) {\r\n      setAuthToken(localStorage.AuthToken);\r\n    }\r\n    try {\r\n      const { data } = await axios.get(`${URL}/getAllUserGoals`);\r\n      const formatData = data.map((item) => {\r\n        const allDays = date_diff_indays(item.startDate, item.plannedEndDate);\r\n        let currentDay =\r\n          date_diff_indays(Date.now(), item.plannedEndDate) > allDays\r\n            ? 0\r\n            : allDays - date_diff_indays(Date.now(), item.plannedEndDate);\r\n        let progress = Math.round((currentDay * 100) / allDays);\r\n        let fullyCompleted = false;\r\n        // Check if goal need to be completed\r\n        if (!item.isCompleted && currentDay >= allDays) {\r\n          completeGoal(item.goalId);\r\n        }\r\n\r\n        if (currentDay > allDays) {\r\n          currentDay = allDays;\r\n        }\r\n\r\n        if (progress > 100) {\r\n          progress = 100;\r\n        }\r\n\r\n        if (\r\n          item.finishedDate &&\r\n          date_diff_indays(item.finishedDate, item.plannedEndDate) <= 0\r\n        ) {\r\n          fullyCompleted = true;\r\n        }\r\n\r\n        return {\r\n          ...item,\r\n          allDays,\r\n          currentDay: currentDay > 0 ? currentDay : 0,\r\n          progress,\r\n          fullyCompleted,\r\n        };\r\n      });\r\n\r\n      setGoalsError(\"\");\r\n      setIsLoaded(true);\r\n      setSortedGoals(formatData);\r\n      setGoalsList(formatData);\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        location.search = \"\";\r\n        setGoalsError(\"\");\r\n        logOut();\r\n      }\r\n      setGoalsError(\"Error, could not fetch list of goals\");\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  const deleteGoals = async (goalId) => {\r\n    setIsLoaded(false);\r\n    try {\r\n      await axios.delete(`${URL}/DeleteUserGoal`, {\r\n        data: { goalId: goalId },\r\n      });\r\n\r\n      loadGoals();\r\n      setIsLoaded(true);\r\n    } catch (err) {\r\n      setIsLoaded(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated || localStorage.AuthToken) {\r\n      loadGoals();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Filter user goals\r\n  const filterGoals = (filter = \"all\") => {\r\n    let goals = [...goalsList];\r\n\r\n    if (filter === \"all\") {\r\n      goals = goals;\r\n    }\r\n\r\n    if (filter === \"byCompleted\") {\r\n      goals = goals.filter((item) => item.isCompleted);\r\n    }\r\n\r\n    if (filter === \"byFullyCompleted\") {\r\n      goals = goals.filter((item) => item.fullyCompleted);\r\n    }\r\n\r\n    if (filter === \"byActive\") {\r\n      goals = goals.filter((item) => !item.isCompleted);\r\n    }\r\n\r\n    setSortedGoals(goals);\r\n  };\r\n\r\n  return (\r\n    <SeasonalGoalContext.Provider\r\n      value={{\r\n        goalsList,\r\n        isLoaded,\r\n        goalsError,\r\n        loadGoals,\r\n        deleteGoals,\r\n        completeGoal,\r\n        filterGoals,\r\n        sortedGoals,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SeasonalGoalContext.Provider>\r\n  );\r\n};\r\nexport default SeasonalGoalState;\r\n","K:\\student\\Competition\\epam\\src\\context\\auth\\AuthContext.js",[],"K:\\student\\Competition\\epam\\src\\Dashboard.js",[],"K:\\student\\Competition\\epam\\src\\utils\\setAuthToken.js",[],"K:\\student\\Competition\\epam\\src\\layouts\\index.js",[],"K:\\student\\Competition\\epam\\src\\pages\\index.js",[],"K:\\student\\Competition\\epam\\src\\pages\\goals\\SingleGoal.js",["172"],"import { React, useContext } from \"react\";\nimport { Button, Row, Form, Col } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport \"./goal-item.css\";\nimport swal from \"sweetalert2\";\n\nimport { DefaultGolasContext } from \"../../context/default/DefaultGoalsContext\";\nimport { AuthContext } from \"../../context/auth/AuthContext\";\nimport { GoalContext } from \"../../context/goals/GoalContext\";\n\nconst SingleGoal = () => {\n  const { logOut } = useContext(AuthContext);\n  const { loadGoals } = useContext(GoalContext);\n\n  const { register, handleSubmit } = useForm();\n  const URL = \"https://hwtaweb20201216131958.azurewebsites.net\";\n  const location = useLocation();\n\n  const useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n  };\n\n  let { dataList } = useContext(DefaultGolasContext);\n  let query = useQuery();\n\n  const postGoal = async (formData) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    if (localStorage.AuthToken) {\n      setAuthToken(localStorage.AuthToken);\n    }\n\n    try {\n      await axios.post(`${URL}/addNewUserGoal`, formData, config);\n      loadGoals();\n      swal.fire(\"Success\", \"Goal was successfully added!\", \"success\");\n    } catch (err) {\n      if (err.response.status === 401) {\n        location.search = \"\";\n        logOut();\n      }\n      swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: err.response.data.errorText,\n      });\n    }\n  };\n\n  const date_diff_indays = (date1, date2) => {\n    let dt1 = new Date(date1);\n    let dt2 = new Date(date2);\n    return Math.floor(\n      (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n        Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) /\n        (1000 * 60 * 60 * 24)\n    );\n  };\n\n  const onSubmit = (data, e) => {\n    // if (date_diff_indays(Date.now(), data.startDate) < 0) {\n    //   swal.fire({\n    //     icon: \"error\",\n    //     title: \"Invalid start date\",\n    //     text: \"You can start from today or later\",\n    //   });\n    //   return;\n    // }\n\n    // if (date_diff_indays(data.startDate, data.endDate) < 1) {\n    //   swal.fire({\n    //     icon: \"error\",\n    //     title: \"Invalid date range\",\n    //     text: \"Please, provide valid date range\",\n    //   });\n\n    //   return;\n    // }\n    data.value = parseInt(data.value);\n    data.startDate = new Date(data.startDate).toISOString();\n    data.endDate = new Date(data.endDate).toISOString();\n    data = { ...data, ...{ regularty: 0 } };\n    postGoal(data);\n    location.search = \"\";\n    e.target.reset();\n  };\n\n  let isNew = false;\n  let goal;\n\n  if (!query.get(\"title\")) {\n    isNew = true;\n  } else {\n    let goalTitle = query.get(\"title\");\n    goal = dataList.find((goal) => goal.title === goalTitle);\n  }\n\n  return (\n    <Row>\n      <Col className=\"col-md-10 mx-auto\">\n        <Form\n          className=\"d-flex flex-column justify-content-between h-100 add-goal-form p-4 shadow\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <h2 className=\"text-center pb-1\">Add your goal</h2>\n          <Form.Row>\n            <Form.Label htmlFor=\"title\" className=\"add-goal-label\">\n              Goal title\n            </Form.Label>\n            <Form.Control\n              className=\"add-goal-input\"\n              defaultValue={isNew ? \"\" : goal.title || \"\"}\n              name=\"goalTitle\"\n              ref={register}\n              required\n              size=\"sm\"\n              type=\"text\"\n              id=\"title\"\n              placeholder=\"Add title...\"\n            />\n          </Form.Row>\n\n          <Form.Row className=\"mt-3\">\n            <Form.Label htmlFor=\"text\" className=\"add-goal-label\">\n              Goal description\n            </Form.Label>\n            <Form.Control\n              className=\"add-goal-input\"\n              as=\"textarea\"\n              rows={2}\n              defaultValue={isNew ? \"\" : goal.description}\n              placeholder=\"Enter goal description here\"\n              name=\"description\"\n              ref={register}\n              required\n              size=\"sm\"\n              id=\"text\"\n            />\n          </Form.Row>\n\n          <Form.Row className=\"mt-3\">\n            <Form.Group as={Col} md=\"6\" className=\"p-0\">\n              <Form.Label className=\"add-goal-label\">\n                Select Start date\n              </Form.Label>\n              <Form.Control\n                required\n                type=\"date\"\n                name=\"startDate\"\n                size=\"md\"\n                ref={register}\n                className=\"add-goal-input\"\n              />\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\">\n              <Form.Label className=\"add-goal-label\">\n                Select End date\n              </Form.Label>\n              <Form.Control\n                required\n                type=\"date\"\n                name=\"endDate\"\n                ref={register}\n                size=\"md\"\n                className=\"add-goal-input\"\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\">\n              <Form.Label className=\"add-goal-label\">\n                Your goal per day\n              </Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                defaultValue={1}\n                name=\"value\"\n                ref={register}\n                size=\"md\"\n                className=\"add-goal-input\"\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"6\">\n              <Form.Label className=\"add-goal-label\">\n                Enter value (kg, $, pc, etc...)\n              </Form.Label>\n\n              <Form.Control\n                className=\"add-goal-input\"\n                autoComplete=\"off\"\n                list=\"items\"\n                name=\"valueType\"\n                ref={register}\n                defaultValue={isNew ? \"\" : goal.item}\n                as=\"input\"\n                required\n              />\n              <datalist id=\"items\">\n                <option value=\"pc\" />\n                <option value=\"kg\" />\n                <option value=\"$\" />\n                <option value=\"km\" />\n              </datalist>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row className=\"d-flex justify-content-center\">\n            <Button className=\"px-5\" type=\"submit\" variant=\"primary\" size=\"md\">\n              Let's begin\n            </Button>\n          </Form.Row>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default SingleGoal;\n","K:\\student\\Competition\\epam\\src\\components\\index.js",[],"K:\\student\\Competition\\epam\\src\\layouts\\header\\Header.js",["173","174"],"import React, { useContext } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth/AuthContext\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport Logo from \"../../assets/logoHeader.svg\";\n\nconst Header = () => {\n  const { isAuthenticated, logOut } = useContext(AuthContext);\n  let location = useLocation();\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark py-3 nav-bar\">\n        <Container>\n          <Navbar.Brand as={NavLink} to=\"/\">\n            <img className=\"logo\" src={Logo}></img>\n          </Navbar.Brand>\n\n          {!isAuthenticated ? (\n            <Nav>\n              <Nav.Link\n                to=\"/login\"\n                as={NavLink}\n                to={{\n                  pathname: \"/login\",\n                  search: location.search,\n                }}\n              >\n                <strong>Login</strong>\n              </Nav.Link>\n              <Nav.Link to=\"/register\" as={NavLink}>\n                <strong>Register</strong>\n              </Nav.Link>\n            </Nav>\n          ) : (\n            <>\n              <Nav className=\"d-flex align-items-center\">\n                <Nav.Link exact to=\"/dashboard\" as={NavLink} className=\" p-0\">\n                  <DropdownMenu />\n                </Nav.Link>\n\n                <Nav.Link\n                  variant=\"outline-secondary\"\n                  onClick={() => {\n                    location.search = \"\";\n                    logOut();\n                  }}\n                >\n                  <strong>Logout</strong>{\" \"}\n                  <i className=\"fas fa-sign-out-alt ml-1\"></i>\n                </Nav.Link>\n              </Nav>\n            </>\n          )}\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;\n","K:\\student\\Competition\\epam\\src\\layouts\\footer\\Footer.js",["175"],"import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/logo.svg\";\r\n// import instagramIcon from \"../../assets/instagramIcon.svg\";\r\n// import facebookIcon from \"../../assets/facebookIcon.svg\";\r\nimport \"./footer.css\";\r\nconst Footer = () => {\r\n  return (\r\n    <Row className=\"footer m-0 py-4\">\r\n      <Col className=\"d-flex justify-content-center align-items-center col-md-4 col-12 pb-2\">\r\n        <img className=\"footer-logo\" src={Logo}></img>\r\n      </Col>\r\n      <Col className=\"d-flex flex-column justify-content-center align-items-center\">\r\n        <Link className=\"text-light\">How it works</Link>\r\n        <Link className=\"text-light\">About us</Link>\r\n        <Link className=\"text-light\">Terms of use</Link>\r\n      </Col>\r\n\r\n      <Col className=\"d-flex justify-content-center align-items-center\">\r\n        <i className=\"fab fa-facebook-square mr-4 shadow\"></i>\r\n        <i className=\"fab fa-instagram-square shadow\"></i>\r\n\r\n        {/* <img className='footer-icon' src={instagramIcon} />\r\n        <img className='footer-icon' src={facebookIcon} /> */}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","K:\\student\\Competition\\epam\\src\\pages\\register\\RegisterPage.js",["176"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Form, Button, Col, Container } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/auth/AuthContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nconst Register = ({ history }) => {\r\n  const { registerUser, isAuthenticated } = useContext(AuthContext);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [userRegister, setUserRegister] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  //Redirect user if isAuthenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Get value from the form\r\n  const onChange = (e) =>\r\n    setUserRegister({ ...userRegister, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setLoading(true);\r\n      return await registerUser(userRegister);\r\n    } catch (err) {\r\n      toast.error(err.message, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"card m-3 p-3\">\r\n        <h2 className=\"text-center mb-3\">\r\n          <span className=\"text-primary\">Register</span> Account\r\n        </h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Row className=\"justify-content-md-center\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"First name\"\r\n                name=\"firstName\"\r\n                minlength=\"2\"\r\n                onChange={onChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-md-center\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Last name\"\r\n                name=\"lastName\"\r\n                minlength=\"2\"\r\n                onChange={onChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-md-center\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                onChange={onChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-md-center\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                minlength=\"6\"\r\n                placeholder=\"Password\"\r\n                required\r\n                name=\"password\"\r\n                onChange={onChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-md-center mt-3\">\r\n            <Button\r\n              disabled={loading}\r\n              to=\"/addGoal\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"px-4\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","K:\\student\\Competition\\epam\\src\\pages\\landing\\LandingPage.js",[],"K:\\student\\Competition\\epam\\src\\pages\\login\\LoginPage.js",["177"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Form, Button, Col, Container } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/auth/AuthContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst LoginPage = ({ history }) => {\r\n  const { loginUser, isAuthenticated } = useContext(AuthContext);\r\n\r\n  const [userLogin, setUserLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const search = useLocation().search;\r\n\r\n  // Get value from the form\r\n  const onChange = (e) =>\r\n    setUserLogin({ ...userLogin, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setLoading(true);\r\n      return await loginUser(userLogin);\r\n    } catch (err) {\r\n      toast.error(err.message, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      if (query.get(\"title\")) {\r\n        history.push(`/dashboard/add-goal${search}`);\r\n      } else {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <Container>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <div className=\"card m-3 p-3\">\r\n        <h2 className=\"text-center mb-3\">\r\n          <span className=\"text-primary\">Log</span> in\r\n        </h2>\r\n        <Form onSubmit={handleSubmit} className=\"h-100\">\r\n          <Form.Row className=\"justify-content-md-center\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                onChange={onChange}\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-md-center\">\r\n            <Form.Group as={Col} md=\"4\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                required\r\n                onChange={onChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row className=\"justify-content-md-center mt-3\">\r\n            <Button\r\n              to=\"/addGoal\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"px-4\"\r\n              disabled={loading}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","K:\\student\\Competition\\epam\\src\\pages\\userGoals\\UserGoalsPage.js",[],"K:\\student\\Competition\\epam\\src\\pages\\seasonalGoals\\SeasonalGoalsPage.js",[],"K:\\student\\Competition\\epam\\src\\context\\default\\DefaultGoalsContext.js",[],"K:\\student\\Competition\\epam\\src\\pages\\goals\\Goal.js",["178"],"import React, { useContext } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Container, Spinner, Card } from \"react-bootstrap\";\nimport { GoalContext } from \"../../context/goals/GoalContext\";\nimport GoalProgress from \"./GoalProgress\";\n\nconst Goal = ({ match }) => {\n  const { id } = match.params;\n  const { goalsList, isLoaded, goalsError, deleteGoals } = useContext(\n    GoalContext\n  );\n  let goal = goalsList.find((el) => el.goalId === Number(id));\n\n  if (!isLoaded) {\n    return (\n      <div className=\"text-center\">\n        <Spinner animation=\"border\" role=\"status\" className=\"p-4 mt-5\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </div>\n    );\n  }\n\n  if (!goal) {\n    return (\n      <div className=\"d-flex h-100 justify-content-center align-items-center text-danger\">\n        <div className=\"align-items-center w-60 h-20\">\n          <h1>Goal does not exist or was deleted</h1>\n        </div>\n      </div>\n    );\n  }\n\n  if (goalsError) {\n    return (\n      <h4 className=\"text-danger text-center\">\n        <strong>{goalsError}</strong>\n      </h4>\n    );\n  }\n\n  return (\n    <Container\n      fluid\n      className=\"d-flex flex-column justify-content-between align-items-center\"\n    >\n      <h1 className=\"mb-3\">{goal.nameGoal}</h1>\n      <Card\n        className=\"mt-3 mb-5\"\n        style={{\n          fontSize: \"1.2em\",\n          borderRadius: \"1em\",\n        }}\n      >\n        <Card.Body>{goal.description}</Card.Body>\n      </Card>\n      <div className=\"d-flex flex-column justify-content-between align-items-center\">\n        <GoalProgress goal={goal} />\n      </div>\n    </Container>\n  );\n};\n\nexport default Goal;\n","K:\\student\\Competition\\epam\\src\\pages\\bages\\BagesPage.js",[],"K:\\student\\Competition\\epam\\src\\pages\\profile\\ProfilePage.js",[],"K:\\student\\Competition\\epam\\src\\pages\\userGoals\\GoalItem.js",[],"K:\\student\\Competition\\epam\\src\\components\\pagination\\Pagination.js",["179"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./pagination.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoalContext } from \"../../context/goals/GoalContext\";\r\nfunction Pagination({ pages = 10, setCurrentPage }) {\r\n  const { goalsList } = useContext(GoalContext);\r\n  //Set number of pages\r\n  const numberOfPages = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    numberOfPages.push(i);\r\n  }\r\n\r\n  // Current active button number\r\n  const [currentButton, setCurrentButton] = useState(1);\r\n\r\n  // Array of buttons what we see on the page\r\n  const [arrOfCurrButtons, setArrOfCurrButtons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let tempNumberOfPages = [...arrOfCurrButtons];\r\n\r\n    let dotsInitial = \"...\";\r\n    let dotsLeft = \"... \";\r\n    let dotsRight = \" ...\";\r\n\r\n    if (numberOfPages.length < 6) {\r\n      tempNumberOfPages = numberOfPages;\r\n    } else if (currentButton >= 1 && currentButton <= 3) {\r\n      tempNumberOfPages = [1, 2, 3, 4, dotsInitial, numberOfPages.length];\r\n    } else if (currentButton === 4) {\r\n      const sliced = numberOfPages.slice(0, 5);\r\n      tempNumberOfPages = [...sliced, dotsInitial, numberOfPages.length];\r\n    } else if (currentButton > 4 && currentButton < numberOfPages.length - 2) {\r\n      // from 5 to 8 -> (10 - 2)\r\n      const sliced1 = numberOfPages.slice(currentButton - 2, currentButton); // sliced1 (5-2, 5) -> [4,5]\r\n      const sliced2 = numberOfPages.slice(currentButton, currentButton + 1); // sliced1 (5, 5+1) -> [6]\r\n      tempNumberOfPages = [\r\n        1,\r\n        dotsLeft,\r\n        ...sliced1,\r\n        ...sliced2,\r\n        dotsRight,\r\n        numberOfPages.length,\r\n      ]; // [1, '...', 4, 5, 6, '...', 10]\r\n    } else if (currentButton > numberOfPages.length - 3) {\r\n      // > 7\r\n      const sliced = numberOfPages.slice(numberOfPages.length - 4); // slice(10-4)\r\n      tempNumberOfPages = [1, dotsLeft, ...sliced];\r\n    } else if (currentButton === dotsInitial) {\r\n      setCurrentButton(arrOfCurrButtons[arrOfCurrButtons.length - 3] + 1);\r\n    } else if (currentButton === dotsRight) {\r\n      setCurrentButton(arrOfCurrButtons[3] + 2);\r\n    } else if (currentButton === dotsLeft) {\r\n      setCurrentButton(arrOfCurrButtons[3] - 2);\r\n    }\r\n\r\n    setArrOfCurrButtons(tempNumberOfPages);\r\n    setCurrentPage(currentButton);\r\n  }, [currentButton, goalsList]);\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <Link\r\n        style={{ fontSize: \"12px\" }}\r\n        className={`${currentButton === 1 ? \"disabled\" : \"\"}`}\r\n        onClick={() =>\r\n          setCurrentButton((prev) => (prev <= 1 ? prev : prev - 1))\r\n        }\r\n      >\r\n        <i className=\"fas fa-arrow-left\"></i>\r\n      </Link>\r\n\r\n      {arrOfCurrButtons.map((item, index) => {\r\n        return (\r\n          <Link\r\n            key={index}\r\n            className={`${currentButton === item ? \"active\" : \"pag-btn\"}`}\r\n            onClick={() => setCurrentButton(item)}\r\n          >\r\n            {item}\r\n          </Link>\r\n        );\r\n      })}\r\n\r\n      <Link\r\n        style={{ fontSize: \"12px\" }}\r\n        className={`${\r\n          currentButton === numberOfPages.length ? \"disabled\" : \"\"\r\n        }`}\r\n        onClick={() =>\r\n          setCurrentButton((prev) =>\r\n            prev >= numberOfPages.length ? prev : prev + 1\r\n          )\r\n        }\r\n      >\r\n        <i className=\"fas fa-arrow-right\"></i>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","K:\\student\\Competition\\epam\\src\\pages\\landing\\Main.js",[],"K:\\student\\Competition\\epam\\src\\pages\\landing\\Hero.js",[],"K:\\student\\Competition\\epam\\src\\components\\sidebar\\SideNav.js",[],"K:\\student\\Competition\\epam\\src\\components\\sidebar\\UserAvatar.js",[],"K:\\student\\Competition\\epam\\src\\pages\\goals\\GoalProgress.js",["180","181","182","183"],"import React, { useState, useEffect, useContext } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport { Container, Button, Row, Col, Spinner } from \"react-bootstrap\";\nimport { GoalContext } from \"../../context/goals/GoalContext\";\nimport swal from \"sweetalert2\";\nimport configureData from \"../../utils/configureData\";\n\nconst GoalProgress = ({ goal }) => {\n  const { deleteGoals } = useContext(GoalContext);\n\n  let today = new Date();\n  let todayDate = {\n    year: today.getFullYear(),\n    month: today.getMonth() + 1,\n    day: today.getDate(),\n  };\n  const preselectedDays = configureData(goal);\n\n  const [minimumDate, setMinimumDate] = useState({\n    year: new Date(goal.startDate).getFullYear(),\n    month: new Date(goal.startDate).getMonth() + 1,\n    day: new Date(goal.startDate).getDate(),\n  });\n\n  const [maximumDate, setMaximumDate] = useState({\n    year: new Date(goal.plannedEndDate).getFullYear(),\n    month: new Date(goal.plannedEndDate).getMonth() + 1,\n    day: new Date(goal.plannedEndDate).getDate(),\n  });\n\n  const [selectedDayRange, setSelectedDayRange] = useState(preselectedDays);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [discardButtonDisabled, setDiscardButtonDisabled] = useState(false);\n  const [inProgress, setInProgress] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  useEffect(() => {\n    if (goal.progress >= 0) {\n      setInProgress(true);\n    } else {\n      setButtonDisabled(true);\n    }\n\n    if (goal.isCompleted) {\n      setIsCompleted(true);\n    }\n  });\n\n  if (preselectedDays.includes(todayDate)) {\n    setButtonDisabled(true);\n  }\n\n  const handleReportSubmit = () => {\n    setSelectedDayRange((selectedDayRange) => [...selectedDayRange, todayDate]);\n    setButtonDisabled(true);\n    swal.fire(\n      \"Success\",\n      \"Your goal was achived today! Keep rocking!\",\n      \"success\"\n    );\n  };\n\n  const handleReportDiscard = () => {\n    swal\n      .fire({\n        title: \"Are you sure?\",\n        text: \"What is done - cannot be undone :(\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, let me out!\",\n      })\n      .then((result) => {\n        if (result.isConfirmed) {\n          setButtonDisabled(true);\n          setDiscardButtonDisabled(true);\n          deleteGoals(goal.goalId);\n          swal.fire(\"Oh, no!\", \"Oh, no no no\", \"success\");\n        }\n      });\n  };\n\n  if (!goal) {\n    return (\n      <div className=\"text-center\">\n        <Spinner animation=\"border\" role=\"status\" className=\"p-4 mt-5\">\n          <span className=\"sr-only\">This goal does not exist</span>\n        </Spinner>\n      </div>\n    );\n  }\n\n  return (\n    <Container>\n      {isCompleted ? (\n        <div>Completed</div>\n      ) : (\n        <>\n          <Calendar\n            value={selectedDayRange}\n            minimumDate={minimumDate}\n            maximumDate={maximumDate}\n            shouldHighlightWeekends\n            colorPrimary=\"#0fbcf9\" // added this\n          />\n          <div className=\"d-flex\">\n            <Row className=\"mt-3\">\n              <Col\n                sm={12}\n                lg={6}\n                className=\"mt-3 d-flex justify-content-center\"\n              >\n                <Button\n                  className=\"px-5\"\n                  variant=\"success\"\n                  size=\"lg\"\n                  onClick={handleReportSubmit}\n                  disabled={buttonDisabled}\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col\n                sm={12}\n                lg={6}\n                className=\"mt-3 d-flex justify-content-center\"\n              >\n                <Button\n                  className=\"px-5\"\n                  variant=\"danger\"\n                  size=\"lg\"\n                  onClick={handleReportDiscard}\n                  disabled={discardButtonDisabled}\n                >\n                  Discard\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default GoalProgress;\n","K:\\student\\Competition\\epam\\src\\pages\\profile\\UserProfileCard.js",[],"K:\\student\\Competition\\epam\\src\\layouts\\header\\DropdownMenu.js",[],"K:\\student\\Competition\\epam\\src\\pages\\bages\\Bage.js",[],"K:\\student\\Competition\\epam\\src\\pages\\landing\\AdsCard.js",[],"K:\\student\\Competition\\epam\\src\\components\\sidebar\\FileUploader.js",[],"K:\\student\\Competition\\epam\\src\\utils\\configureData.js",[],"K:\\student\\Competition\\epam\\src\\components\\sidebar\\SideBar.js",[],"K:\\student\\Competition\\epam\\src\\context\\users\\UsersContext.js",["184","185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":122,"column":6,"nodeType":"192","endLine":122,"endColumn":23,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":129,"column":15,"nodeType":"196","messageId":"197","endLine":129,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":6,"column":8,"nodeType":"196","messageId":"200","endLine":6,"endColumn":12},{"ruleId":"190","severity":1,"message":"191","line":123,"column":6,"nodeType":"192","endLine":123,"endColumn":23,"suggestions":"201"},{"ruleId":"194","severity":1,"message":"195","line":130,"column":15,"nodeType":"196","messageId":"197","endLine":130,"endColumn":20},{"ruleId":"198","severity":1,"message":"202","line":55,"column":9,"nodeType":"196","messageId":"200","endLine":55,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":18,"column":13,"nodeType":"205","endLine":18,"endColumn":46},{"ruleId":"206","severity":1,"message":"207","line":27,"column":17,"nodeType":"208","endLine":30,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":12,"column":9,"nodeType":"205","endLine":12,"endColumn":49},{"ruleId":"190","severity":1,"message":"209","line":21,"column":6,"nodeType":"192","endLine":21,"endColumn":23,"suggestions":"210"},{"ruleId":"190","severity":1,"message":"211","line":51,"column":6,"nodeType":"192","endLine":51,"endColumn":23,"suggestions":"212"},{"ruleId":"198","severity":1,"message":"213","line":9,"column":44,"nodeType":"196","messageId":"200","endLine":9,"endColumn":55},{"ruleId":"190","severity":1,"message":"214","line":59,"column":6,"nodeType":"192","endLine":59,"endColumn":32,"suggestions":"215"},{"ruleId":"198","severity":1,"message":"216","line":20,"column":23,"nodeType":"196","messageId":"200","endLine":20,"endColumn":37},{"ruleId":"198","severity":1,"message":"217","line":26,"column":23,"nodeType":"196","messageId":"200","endLine":26,"endColumn":37},{"ruleId":"198","severity":1,"message":"218","line":35,"column":10,"nodeType":"196","messageId":"200","endLine":35,"endColumn":20},{"ruleId":"190","severity":1,"message":"219","line":38,"column":3,"nodeType":"196","endLine":38,"endColumn":12,"suggestions":"220"},{"ruleId":"198","severity":1,"message":"221","line":4,"column":10,"nodeType":"196","messageId":"200","endLine":4,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":60,"column":9,"nodeType":"224","messageId":"225","endLine":60,"endColumn":20},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadGoals'. Either include it or remove the dependency array.","ArrayExpression",["228"],"no-self-assign","'goals' is assigned to itself.","Identifier","selfAssignment","no-unused-vars","'swal' is defined but never used.","unusedVar",["229"],"'date_diff_indays' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'history', 'query', and 'search'. Either include them or remove the dependency array.",["231"],"'deleteGoals' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arrOfCurrButtons', 'numberOfPages', and 'setCurrentPage'. Either include them or remove the dependency array. If 'setCurrentPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],"'setMinimumDate' is assigned a value but never used.","'setMaximumDate' is assigned a value but never used.","'inProgress' is assigned a value but never used.","React Hook useEffect contains a call to 'setInProgress'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [goal.progress, goal.isCompleted] as a second argument to the useEffect Hook.",["233"],"'useLocation' is defined but never used.","no-dupe-keys","Duplicate key 'loadFriends'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [isAuthenticated, loadGoals]",{"range":"245","text":"246"},{"range":"247","text":"246"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"248","text":"249"},"Update the dependencies array to be: [history, isAuthenticated, query, search]",{"range":"250","text":"251"},"Update the dependencies array to be: [arrOfCurrButtons, currentButton, goalsList, numberOfPages, setCurrentPage]",{"range":"252","text":"253"},"Add dependencies array: [goal.progress, goal.isCompleted]",{"range":"254","text":"255"},[3559,3576],"[isAuthenticated, loadGoals]",[3608,3625],[680,697],"[history, isAuthenticated]",[1447,1464],"[history, isAuthenticated, query, search]",[2330,2356],"[arrOfCurrButtons, currentButton, goalsList, numberOfPages, setCurrentPage]",[1683,1683],", [goal.progress, goal.isCompleted]"]
